var documenterSearchIndex = {"docs":
[{"location":"#NoiseRobustDifferentiation.jl","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"","category":"section"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"Julia reimplementation of Total Variation Regularized Numerical Differentiation (TVDiff) based on Rick Chartrand's original MATLAB code with small changes and tests from Simone Sturniolo's Python reimplementation.","category":"page"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"","category":"page"},{"location":"#Differences-to-MATLAB-Code","page":"NoiseRobustDifferentiation.jl","title":"Differences to MATLAB Code","text":"","category":"section"},{"location":"#Conjugate-gradient-method","page":"NoiseRobustDifferentiation.jl","title":"Conjugate gradient method","text":"","category":"section"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"The original code uses MATLAB's inbuilt function pcg(), which implements the preconditioned conjugate gradients method (PCG). This code uses the cojugate gradients method (CG) from IterativeSolvers.jl. Refer to the implementation details for a brief discussion of differences between both methods.","category":"page"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"Since the CG method from IterativeSolvers.jl allows for preconditioners, most of the options from Preconditioners.jl are implemented using default parameters.","category":"page"},{"location":"#New-parameters","page":"NoiseRobustDifferentiation.jl","title":"New parameters","text":"","category":"section"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"preconditioner: Method used for preconditioning if scale=\\\"large\\\" is chosen.\ncg_tol: Tolerance used in conjugate gradient method.","category":"page"},{"location":"#Functions","page":"NoiseRobustDifferentiation.jl","title":"Functions","text":"","category":"section"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"TVRegDiff(data::Array{<:Real,1}, iter::Int, Î±::Real; kwargs...)","category":"page"},{"location":"#Citation","page":"NoiseRobustDifferentiation.jl","title":"Citation","text":"","category":"section"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"Please cite the following paper if you use this code in published work:","category":"page"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"Rick Chartrand, \"Numerical differentiation of noisy, nonsmooth data,\" ISRN Applied Mathematics, Vol. 2011, Article ID 164564, 2011. ","category":"page"},{"location":"#Index","page":"NoiseRobustDifferentiation.jl","title":"Index","text":"","category":"section"},{"location":"","page":"NoiseRobustDifferentiation.jl","title":"NoiseRobustDifferentiation.jl","text":"","category":"page"}]
}
